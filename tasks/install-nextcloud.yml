---
- name: Download Nextcloud
  unarchive:
    src: "{{ nextcloud_archive }}"
    dest: "{{ webserver_root }}"
    owner: "{{ webserver_user }}"
    group: "{{ webserver_group }}"
    remote_src: true
    creates: "{{ nextcloud_root }}"

- name: Create directories
  file:
    path: "{{ item }}"
    owner: "{{ webserver_user }}"
    group: "{{ webserver_group }}"
    recurse: yes
    state: directory
  loop:
    - "{{ nextcloud_root }}"
    - "{{ nextcloud_data_dir }}"
    - "{{ nextcloud_audit_log_dir }}"

- name: Ensure occ is executable
  file:
    path: "{{ nextcloud_root }}/occ"
    mode: a+x

# If installation command is not existing, nextcloud has already been installed
- name: Verify installation command existence
  shell: 'php {{ nextcloud_root | quote }}/occ | grep maintenance:install'
  become: true
  become_user: "{{ webserver_user }}"
  register: check_install
  failed_when: check_install.rc != 1 and check_install.rc != 0

- name: Install nextcloud if not already installed.
  command: >
    php {{ nextcloud_root }}/occ maintenance:install --database "mysql" --database-name "{{ db_name }}"
    --database-user "{{ db_user }}" --database-pass "{{ db_password }}"
    --admin-user "{{ nextcloud_admin_user }}" --admin-pass "{{ nextcloud_admin_password }}" --data-dir "{{ nextcloud_data_dir }}"
  become: true
  become_user: "{{ webserver_user }}"
  changed_when: true
  when: "'maintenance:install' in check_install.stdout"


# configure trusted host to allow access
- name: Add hostname to trusted host if defined
  command: 'php {{ nextcloud_root }}/occ config:system:set trusted_domains 1 --value "{{ nextcloud_server_host }}"'
  become: true
  become_user: "{{ webserver_user }}"
  changed_when: true
  when: nextcloud_server_host is defined

- name: Add ip adress to trusted host if defined
  command: 'php {{ nextcloud_root }}/occ config:system:set trusted_domains 2 --value "{{ nextcloud_server_ip }}"'
  become: true
  become_user: "{{ webserver_user }}"
  changed_when: true
  when: nextcloud_server_ip is defined

# configure audit log
- name: Configure audit log
  command: 'php {{ nextcloud_root }}/occ config:app:set admin_audit logfile --value "{{ nextcloud_audit_log_dir }}/audit.log"'
  become: true
  become_user: "{{ webserver_user }}"
  changed_when: true 

- name: Enable already desired featured apps
  command: 'php {{ nextcloud_root }}/occ app:enable {{ item }}'
  become: true
  become_user: "{{ webserver_user }}"
  changed_when: true 
  loop: "{{ nextcloud_featured_apps }}"

- name: Verify if group_folders apps is installed
  shell: 'php {{ nextcloud_root | quote }}/occ app:list | grep groupfolders'
  become: true
  become_user: "{{ webserver_user }}"
  register: check_groupfolder_install
  failed_when: check_groupfolder_install.rc != 1 and check_groupfolder_install.rc != 0

- name: Install and enable group_folders app
  command: 'php {{ nextcloud_root }}/occ app:{{ item }} groupfolders'
  become: true
  become_user: "{{ webserver_user }}"
  changed_when: true
  loop:
    - install
    - enable
  when: "'groupfolders' not in check_groupfolder_install.stdout"

- name: Verify if files_antivirus app is installed
  shell: 'php {{ nextcloud_root | quote }}/occ app:list | grep files_antivirus'
  become: true
  become_user: "{{ webserver_user }}"
  register: check_files_antivirus_install
  failed_when: check_files_antivirus_install.rc != 1 and check_files_antivirus_install.rc != 0

- name: Install and enable files_antivirus app
  command: 'php {{ nextcloud_root }}/occ app:{{ item }} files_antivirus'
  become: true
  become_user: "{{ webserver_user }}"
  changed_when: true 
  loop:
    - install
    - enable
  when: "'files_antivirus' not in check_files_antivirus_install.stdout"

# performance tuning
- name: nextcloud tuning - configure APCu for local caching
  command: 'php {{ nextcloud_root }}/occ config:system:set memcache.local --value "\OC\Memcache\APCu"'
  become: true
  become_user: "{{ webserver_user }}"
  changed_when: true

- name: nextcloud tuning - connect to redis on unixsocket
  command: 'php {{ nextcloud_root }}/occ config:system:set redis "host" --value "{{ redis_socket }}"'
  become: true
  become_user: "{{ webserver_user }}"
  changed_when: true

- name: nextcloud tuning - connect to redis on unixsocket, set port to 0
  command: 'php {{ nextcloud_root }}/occ config:system:set redis "port" --value 0'
  become: true
  become_user: nginx
  changed_when: true

- name: nextcloud tuning - use redis for file locking
  command: 'php {{ nextcloud_root }}/occ config:system:set memcache.locking --value "\OC\Memcache\Redis"'
  become: true
  become_user: "{{ webserver_user }}"
  changed_when: true